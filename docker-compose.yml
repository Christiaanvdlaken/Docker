version: "3.7"

services:
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1111
      - PGID=4321
      - TZ=Etc/UTC
      - UMASK=002
    volumes:
      - $CONFIG_FOLDER/radarr:/config
      - $MOVIE_FOLDER:/movies 
      - $DOCU_FOLDER:/documentaries 
      - $DATA_FOLDER:/data 
    ports:
      - 7878:7878
    restart: unless-stopped
  
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=2222
      - PGID=4321
      - TZ=Etc/UTC
      - UMASK=002
    volumes:
      - $CONFIG_FOLDER/sonarr:/config
      - $SERIES_FOLDER:/tvseries #Aanpassen
      - $DATA_FOLDER:/data #Aanpassen
    ports:
      - 8989:8989
    restart: unless-stopped
    
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:4.6.0
    container_name: qbittorrent
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    environment:
      - PUID=3333
      - PGID=4321
      - TZ=Etc/UTC
      - UMASK=002
      - WEBUI_PORT=8080
    volumes:
      - $CONFIG_FOLDER/qbit:/config
      - $DOWNLOAD_FOLDER_TORRENT:/data/torrents:rw
    ports:
      - 8080:8080
      - 6881:6881
      - 6881:6881/udp
    restart: unless-stopped

  sabnzbd:
      image: lscr.io/linuxserver/sabnzbd:latest
      container_name: sabnzbd
      environment:
        - PUID=6666
        - PGID=4321
        - TZ=Etc/UTC
      volumes:
        - $CONFIG_FOLDER/sabnzb:/config
        - $DOWNLOAD_FOLDER_USENET:/data/usenet:rw

      ports:
        - 8282:8080
      restart: unless-stopped 

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=4444
      - PGID=4321
      - UMASK=002
      - TZ=Etc/UTC
    volumes:
      - $CONFIG_FOLDER/prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=5555
      - PGID=4321
      - UMASK=002
      - TZ=Etc/UTC
    volumes:
      - $CONFIG_FOLDER/bazarr:/config
      - $MEDIA_FOLDER:/data/media
    ports:
      - 6767:6767
    restart: unless-stopped

  mkvtoolnix:
    image: jlesage/mkvtoolnix
    container_name: mkvtoolnix
    ports:
      - 5800:5800
    volumes:
      - $CONFIG_FOLDER/mkvtoolnix:/config:rw
      - $MOVIE_FOLDER:/storage:rw

  openbooks:
    container_name: OpenBooks
    image: evanbuss/openbooks:latest
    restart: unless-stopped
    ports:
      - 7676:80
    volumes:
      - $BOOK_FOLDER:/data/media/books
    command: --persist --name Carnita1234

  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
    - WATCHTOWER_CLEANUP=true

  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    environment:
        - PUID=7777
        - PGID=4321
    ports:
      - 3000:3000
    volumes:
      - $CONFIG_FOLDER/homepage:/config 
      - /var/run/docker.sock:/var/run/docker.sock:ro # optional, for docker integrations
    restart: unless-stopped

  mealie:
    image: ghcr.io/mealie-recipes/mealie:v1.0.0 # 
    container_name: mealie
    ports:
        - "9925:9000" # 
    deploy:
      resources:
        limits:
          memory: 1000M # 
    volumes:
      - mealie-data:/app/data/
    environment:
    # Set Backend ENV Variables Here
      - ALLOW_SIGNUP=true
      - PUID=1000
      - PGID=1000
      - TZ=America/Anchorage
      - MAX_WORKERS=1
      - WEB_CONCURRENCY=1
      - BASE_URL=$BASE_URL
      - DEFAULT_GROUP=Home
      - DEFAULT_EMAIL=$DEFAULT_EMAIL
    restart: always

  ##
  # Los deployen zodat ik vanuit portainer de compose file via GIT kan uploaden als een stack
  ##
  # portainer:
  #     container_name: portainer
  #     image: portainer/portainer-ce:latest
  #     ports:
  #       - 9443:9443
  #     volumes:
  #         - $CONFIG_FOLDER/portainer:/data
  #         - /var/run/docker.sock:/var/run/docker.sock
  #     restart: unless-stopped

  flaresolverr:
      # DockerHub mirror flaresolverr/flaresolverr:latest
      image: ghcr.io/flaresolverr/flaresolverr:latest
      container_name: flaresolverr
      environment:
        - LOG_LEVEL=${LOG_LEVEL:-info}
        - LOG_HTML=${LOG_HTML:-false}
        - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
        - TZ=Europe/London
      ports:
        - "8191:8191"
      restart: unless-stopped

  broker:
    image: docker.io/library/redis:7
    restart: unless-stopped
    volumes:
      - redisdata:/data

  db:
    image: docker.io/library/postgres:16
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: paperless
      POSTGRES_USER: paperless
      POSTGRES_PASSWORD: paperless

  webserver:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    container_name: paperless
    restart: unless-stopped
    depends_on:
      - db
      - broker
    ports:
      - "8000:8000"
    volumes:
      - $CONFIG_FOLDER/paperless:/usr/src/paperless/data
      - $MEDIA_FOLDER/paperless:/usr/src/paperless/media
      - ./export:/usr/src/paperless/export
      - ./consume:/usr/src/paperless/consume
    environment:
      PAPERLESS_REDIS: redis://broker:6379
      PAPERLESS_DBHOST: db

volumes:
  pgdata:
  redisdata:
  mealie-data:
    driver: local
